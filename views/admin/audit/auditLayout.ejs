<%- contentFor('title')%>
<%= __("administrationAudit|Audit log") %> - <%= __("administrationAudit|Administration") %> - <%= __(`common|ProgramName${company}`) %>

<%- contentFor('body')%>
<main id="main">
  <!-- page-title-comp -->
  <div class="page-title-comp">
    <h2 class="page-title">
      <span class="icon-title icon-title-administration"></span> <%= __("administrationAudit|Administration") %>
    </h2>
  </div>
  <!-- //page-title-comp -->
  <div class="table-divide-wrap">
    <div class="table-divide">
      <div id="listTable" class="divide-inner loading-parent">
        <div class="html-container">
          <!--
          * @date 2021-05-31
          * @desc front performance improvement - dummy rendering
          * @company
          * -->
          <%- include('./auditList.ejs', {
            ObjView : [],
            pages : 1, current : 1,
            time : {regtime: 'regtime', from: '', to: ''},
            rendering: 'dummy'
          })%>
          <!-- // @date 2021-05-31 -->
        </div>
      </div>
    </div>
  </div>
</main>

<%- contentFor('modal')%>
<div id="modal-new" class="modal"></div>
<div id="modal-edit" class="modal"></div>

<div id="alert" class="alert">
  <%- include('../../include/alertModal.ejs')%>
</div>

<style>
  /* for loading */
  #listTable {
    min-height: 750px;
    background: #fff;
    border-radius: 8px;
  }
</style>

<script>
  var customFilterCondition = [
		{
			select: {originval: 'email', dataval: '<%= __("administrationAudit|User ID") %>'},
			condition: {type: 'input'}
		},
    {
			select: {originval: 'ip', dataval: '<%= __("administrationAudit|Client IP") %>'},
			condition: {type: 'input'}
		},
    {
			select: {originval: 'action', dataval: '<%= __("administrationAudit|Action") %>'},
      condition: {
        type: 'select',
        options: [
          {originval: 'Login', dataval: '<%= __("administrationAudit|Login") %>'},
          {originval: 'Logout', dataval: '<%= __("administrationAudit|Logout") %>'},
          {originval: 'userCreate', dataval: '<%= __("administrationAudit|userCreate") %>'},
          {originval: 'userUpdate', dataval: '<%= __("administrationAudit|userUpdate") %>'},
          {originval: 'userEmailSend', dataval: '<%= __("administrationAudit|userEmailSend") %>'},
          {originval: 'userResetPassword', dataval: '<%= __("administrationAudit|userResetPassword") %>'},
          /**
          * @date 2021-07-23
          * @desc hide non-threat elemtns
          * @company BUS_Secure
          */
          <% if(company != 'BUS_Secure') { %>
          {originval: 'notiUpdate', dataval: '<%= __("administrationAudit|notiUpdate") %>'},
          <% } %>
          /*************************************/
        ]
      }
		},
    {
			select: {originval: 'note', dataval: '<%= __("administrationAudit|Detailed Activities") %>'},
      condition: {type: 'input'}
		},
    {
			select: {originval: 'result', dataval: '<%= __("administrationAudit|Result") %>'},
      condition: {
        type: 'select',
        options: [
          {originval: 1, dataval: '<%= __("administrationAudit|Success") %>'},
          {originval: 0, dataval: '<%= __("administrationAudit|Fail") %>'}
        ]
      }
		},
	];
</script>

<script>
  var setState = (objState) => {
    const state = $.extend({}, history.state, objState);
    const url = location.href.split("?")[0];
    history.replaceState(state, null, url);
  }
  var maintainState = () => {
    const {entries = 10, page = 1, filter = []} = history.state || {};
    $('#listEntries').find(`option[value="${entries}"]`).prop('selected', true);
    $('#pagination').find('.page-item.page-num').removeClass('active').filter(function(index, element){return $(element).data('page') == page}).addClass('active');

    const $list = $('#listTable');
    const filterCustom = $list.find(`.filter-custom`).data('filterCustom');

    filterCustom && $.each(filter, function (index, element) {
      filterCustom.addItem(element)
    });
  }
  var getState = function(req, res) {
    return history.state || {};
  }
</script>

<script>
  var openLoading = function($loadingParent, option){
    const DELAYLOADINGTIME = 300;
    let data = { isLoaded: false };
    setTimeout(()=>{
      if(!data.isLoaded){
        addLoading($loadingParent, option);
      }
    }, DELAYLOADINGTIME);

    return {
      setLoaded: function(isLoaded){
        data.isLoaded = isLoaded
      }
    }
  }
</script>

<%- include('./audit.script.request.ejs')%>

<script>
window.addEventListener("load", function(event) {
  const page = getState().page || 1;
  const entries = getState().entries || 10;
  const stateFilter = getState().filter && getState().filter.length ? getState().filter : null;
  const time = getState().time || null;
  const filters = stateFilter && stateFilter.map(function(element){
    const filter = {};
    filter[element.key.originval] = element.value.originval;
    return filter;
  });
  requestList(page, entries, time, filters);
});
</script>
<script>
  var refreshPage = (reset, refreshSetting = {}) => {
    if(reset){
      const initialState = {initCheckedDataIDs: [], sid: [], page: 1, time: null, filter: null};
      setState({...initialState, ...refreshSetting});
    }
    window.location.reload(true);
  }
</script>
