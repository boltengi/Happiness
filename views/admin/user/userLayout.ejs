<%- contentFor('title')%>
<%= __("administrationUser|User") %> - <%= __("administrationUser|Administration") %> - <%= __(`common|ProgramName${company}`) %>

<%- contentFor('body')%>
<main id="main">
  <!-- page-title-comp -->
  <div class="page-title-comp">
    <h2 class="page-title">
      <span class="icon-title icon-title-administration"></span> <%= __("administrationUser|Administration") %>
    </h2>
  </div>
  <!-- //page-title-comp -->
  <div class="table-divide-wrap">
    <div id="listTable" class="divide-inner loading-parent">
      <div class="html-container">
        <!--
        * @date 2021-05-31
        * @desc front performance improvement - dummy rendering
        * @company
        * -->
        <%- include('./userList.ejs', {
          ObjView : [],
          pages : 1, current : 1,
          rendering: 'dummy'
        })%>
        <!-- // @date 2021-05-31 -->
      </div>
    </div>
  </div>
</main>

<%- contentFor('modal')%>
<div id="modal-new" class="modal"></div>
<div id="modal-edit" class="modal"></div>

<div id="alert" class="alert">
  <%- include('../../include/alertModal.ejs')%>
</div>

<script>
  var customFilterCondition = [
		{
			select: {originval: 'company', dataval: '<%= __("administrationUser|Company") %>'},
			condition: {type: 'input'}
		},
		{
			select: {originval: 'name', dataval: '<%= __("administrationUser|User") %>'},
			condition: {type: 'input'}
		},
    {
			select: {originval: 'email', dataval: '<%= __("administrationUser|E-mail") %>'},
			condition: {type: 'input'}
		},
		{
			select: {originval: 'role', dataval: '<%= __("administrationUser|Role") %>'},
			condition: {
				type: 'select',
				options: [
					{originval: 0, dataval: '<%= __("administrationUser|Admin") %>'},
          {originval: 1, dataval: '<%= __("administrationUser|Manager") %>'}
				]
			}
		},
	];
</script>

<script>
  var setState = (objState) => {
    const state = $.extend({}, history.state, objState);
    const url = location.href.split("?")[0];
    history.replaceState(state, null, url);
  }
  var maintainState = () => {
    const {entries = 10, page = 1, filter = []} = history.state || {};
    $('#listEntries').find(`option[value="${entries}"]`).prop('selected', true);
    $('#pagination').find('.page-item.page-num').removeClass('active').filter(function(index, element){return $(element).data('page') == page}).addClass('active');
    /**
    * @date 2021-05-06
    * @desc fix bug about duplicated filter condition
    * @company
    */
    const $list = $('#listTable');
    const filterCustom = $list.find(`.filter-custom`).data('filterCustom')
    /*************************************/
    filterCustom && $.each(filter, function (index, element) {
      filterCustom.addItem(element)
    });
  }
  var getState = function(req, res) {
    return history.state || {};
  }
</script>

<script>
  var openLoading = function($loadingParent, option){
    const DELAYLOADINGTIME = 300;
    let data = { isLoaded: false };
    setTimeout(()=>{
      if(!data.isLoaded){
        addLoading($loadingParent, option);
      }
    }, DELAYLOADINGTIME);

    return {
      setLoaded: function(isLoaded){
        data.isLoaded = isLoaded
      }
    }
  }

</script>

<%- include('./user.script.request.ejs')%>

<script>
window.addEventListener("load", function(event) {

  const page = getState().page || 1;
  const entries = getState().entries || 10;
  const stateFilter = getState().filter && getState().filter.length ? getState().filter : null;
  const filters = stateFilter && stateFilter.map(function(element){
    const filter = {};
    filter[element.key.originval] = element.value.originval;
    return filter;
  });
  requestList(page, entries, filters);
});
</script>
<script>
  var refreshPage = (reset, refreshSetting = {}) => {
    if(reset){
      const initialState = {page: 1, time: null, filter: null};
      setState({...initialState, ...refreshSetting});
    }
    window.location.reload(true);
  }
</script>
