<script>
  /* common */
  const requestTree = () => {
    fetch('/asset/scan/treelist')
    .then(function (response) {
      return response.text()
    })
    .then(function (data) {
      const $tree = $('#tree').html(data);
    });
  }

  const requestSummary = () => {
    fetch('/asset/scan/summary')
    .then(function (response) {
      return response.text()
    })
    .then(function (data) {
      const $summary = $('#summary').html(data);
    });
  }

  const requestStatus = function(type){
    const loading = openLoading($(`#${type}-graph`));

    return fetch(`/asset/detection/status/${type}`)
    .then(function(response){
      return {
        data: response.json(),
        loading: loading
      };
    })
  }

  /* default page */
  const requestList = (page, entries, sid, time, filter) => {
    function validFromToTimeReg(time){
      let valid = { isValid : true, from : true, to : true };

      if (!time) return valid;

      if(time.from !== '' && !moment(time.from)._isValid) valid.from = false;
      if(time.to !== '' && !moment(time.to)._isValid) valid.to = false;
      if(!valid.from || !valid.to) valid.isValid = null;

      if(time.from === '' && time.to === '') {} // for admin regtime
      else if(time.from !== '' && time.to !== '') {}
      else {
        valid.isValid = false;
        if (!time.from) valid.from = false;
        if (!time.to) valid.to = false;
      }

      if( new Date(time.from).getTime() > new Date(time.to).getTime() ){
        valid.from = false;
        valid.to = false;
        valid.isValid = null;
      }

      return valid;
    }
    function checkFromToTimeReg(validTime){
      if(validTime.isValid === true) return true;
      if(!validTime.isValid){
        alertModalControl('open', 'alertError', '<%= __("assetScan|Check again") %>', {
          closeCallback: function(){
            $('#from-datepicker').focus();
          }
        });
        return validTime.isValid;
      }
    }
    function checkRangeTimeReg(time){
      const isvalidFromToTime = validFromToTimeReg(time);
      const checkTime = checkFromToTimeReg(isvalidFromToTime);
      return checkTime
    }
    if(!checkRangeTimeReg(time)) time = null;

    const loading = openLoading($(`#listTable`), {size:'large', template: $('#listTable' + ' .search-area').length ? undefined: 'cardTableList', title: '<%= __("assetScan|Scan of asset") %>'});

    // // table
    const condition = {
      entries: entries,
      sid: sid
    };

    if (time) condition.time = time;
    if (filter) condition.filter = filter;

    return fetch(`/asset/scan/${page}`, {
      method: 'POST',
      body: JSON.stringify(condition),
      headers: {
        'Content-Type': 'application/json'
      }
    })
      .then(function (response) {
        return {
          data: response.text(),
          loading: loading
        };
      })
      .then((data)=>{
        data.loading.setLoaded(true);
        return data.data
      })
      .then(function (data) {
        const $listTable = $('#listTable .html-container').html(data);
        return {isLoading: true}
      })
      .then(function (data) {
        if(data.isLoading){
          const $loadingParent = $('#listTable');
          removeLoading($loadingParent);
        }
      })
      .catch(function (error) { console.error('Error:', error) });
  }

  /* detail page */
  const requestInformation = function(aid){
    const condition = {
    }
    // information
    return fetch(`/asset/scan/assetInformation/${aid}`,
      {
        method: 'POST',
        body: JSON.stringify(condition),
        headers: {
          'Content-Type': 'application/json'
        }
      }
    )
    .then(function (response) {
      return response.text()
    })
    .then(function (data) {
      const $html = $('#informationDetail').html(data);
    });
  }
  const requestTrendsTemplate = () => {
    return fetch(`/asset/scan/assetTrends`,
      {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }
    )
    .then(function(response){
      return response.text();
    })
    .then(function (data) {
      $('#trends').html(data);
    });
  }
  const requestTrends = (aid, time = 7) => {

    // trends
    const condition = {
      time: time,
      aid: aid
    }
    return fetch(`/asset/scan/assetTrends/${aid}`,
      {
        method: 'POST',
        body: JSON.stringify(condition),
        headers: {
          'Content-Type': 'application/json'
        }
      }
    )
    .then(function(response){
      return response.json();
    })
    .then(function (data) {
      drawGraphTrends(data, time);
    });
  }
  const requestVulnscan = (aid, page, entries) => {
    // vulnerability
    const condition = {
      entries: entries,
      page: page
    }
    return fetch(`/asset/scan/assetVulnscan/${aid}`,
      {
        method: 'POST',
        body: JSON.stringify(condition),
        headers: {
          'Content-Type': 'application/json'
        }
      }
    )
    .then(function (response) {
      return response.text()
    })
    .then(function (data) {
      const $listTable = $('#vulnscanList').html(data);
    });
  }
</script>
