<%- contentFor('title')%>
<%= __("vulnerability|Vulnerability list") %> - <%= __("vulnerability|Vulnerability") %> - <%= __(`common|ProgramName${company}`) %>

<%- contentFor('body')%>
<main id="main">

  <!-- page-title-comp -->
  <div class="page-title-comp">
    <h2 class="page-title">
      <span class="icon-title icon-title-vulnerability"></span> <%= __("vulnerability|Vulnerability") %>
    </h2>
  </div>
  <!-- //page-title-comp -->

  <div id="summary"></div>

  <div class="table-divide-wrap">
    <div class="table-divide">
      <!-- card -->
      <div class="card">
        <div id="informationDetail"></div>

        <div id="trends"></div>

        <div id="assetList"></div>

      </div>
      <!-- //card -->
    </div>
  </div>

</main>
<!-- //main -->

<%- contentFor('modal')%>
<div id="alert" class="alert">
  <%- include('../../include/alertModal.ejs')%>
</div>


<script>
  var setState = (objState) => {
    const state = $.extend({}, history.state, objState);
    history.replaceState(state, null);
  }
  var getState = function(req, res) {
    return history.state || {};
  }
  var maintainState = () => {
    const {assetEntries = 10, assetPage = 1, assetTime = 7} = history.state || {};
    $('#assetTime').find(`option[value="${assetTime}"]`).prop('selected', true);
    $('#assetEntries').find(`option[value="${assetEntries}"]`).prop('selected', true);
    $('#pagination').find('.page-item.page-num').removeClass('active').filter(function(index, element){return $(element).data('page') == assetPage}).addClass('active');
  }
</script>
<script>
  var getQueryString = function(){
    const query = window.location.search.substr(1).split('&');
    if (query == '') return {};
    const obj = {}
    for (let i = 0; i < query.length; i++){
      const p = query[i].split('=', 2);
      if(p.length == 1) obj[p[0]] = '';
      else obj[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));;
    }
    return obj
  }
</script>
<script>
  var openLoading = function($loadingParent, option){
    const DELAYLOADINGTIME = 300;
    let data = { isLoaded: false };
    setTimeout(()=>{
      if(!data.isLoaded){
        addLoading($loadingParent, option);
      }
    }, DELAYLOADINGTIME);

    return {
      setLoaded: function(isLoaded){
        data.isLoaded = isLoaded
      }
    }
  }
</script>

<%- include('./vulnerability.script.request.ejs')%>

<script>
  window.addEventListener("load", function (event) {
    const vulnerability_id = location.href.split('/')[location.href.split('/').length-1];

    requestSummary();
    requestInformation(vulnerability_id);
    requestTrendsTemplate();
    requestAsset(vulnerability_id, 1, 10, 7);
  });
</script>
